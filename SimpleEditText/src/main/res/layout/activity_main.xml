<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:tools="http://schemas.android.com/tools"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="vertical"
              android:padding="16dp"
              tools:context=".MainActivity">

    <!--I will add an icon on the left side of the EditText
    But I don't use an ImageView
    I user a plugin to generate the icons: https://github.com/konifar/android-material-design-icon-generator-plugin
    You can add it by yourself. I will add the link at the description of the video.
    Using "ctrl + alt + m" to open the generator window.
    Add the icon to the EditText using drawableLeft attribute

    You should add the inputType attribute for an EditText. You can have look the list
    of the inputType in the android develop website or in the Android Studio

    with an email we can use one line for EditText by using singleLine or maxLines attribute

    we can use nextFocus* to go to the next EditText-->
    <EditText
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:drawableLeft="@drawable/ic_email_black_24dp"
            android:drawablePadding="8dp"
            android:hint="Email"
            android:singleLine="true"
            android:inputType="textEmailAddress"
            android:nextFocusDown="@id/etPhoneNumber"/>

    <EditText
            android:id="@+id/etPhoneNumber"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:drawableLeft="@drawable/ic_call_black_24dp"
            android:drawablePadding="8dp"
            android:hint="Phone number"
            android:singleLine="true"
            android:inputType="phone"
            android:nextFocusDown="@id/etPassword"/>

    <EditText
            android:id="@+id/etPassword"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:drawableLeft="@drawable/ic_lock_black_24dp"
            android:drawablePadding="8dp"
            android:hint="Password"
            android:singleLine="true"
            android:inputType="textPassword"/>

    <!--We are able to add an EditText with material design.
    We have to add material design lib first.
    Add an EditText-->
    <android.support.design.widget.TextInputLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

        <android.support.design.widget.TextInputEditText
                android:id="@+id/etDescription"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:lines="4"
                android:inputType="textCapSentences|textMultiLine"
                android:gravity="top"
                android:hint="Description"/>

    </android.support.design.widget.TextInputLayout>

</LinearLayout>